import{existsSync as $,readFileSync as O,statSync as T}from"fs";import{basename as F,dirname as y,join as _,relative as E,resolve as g}from"path";import{FileNotFoundError as A}from"~/utils/errors";import{normalizePath as p}from"~/utils/path";const M=/((?:require\(|require\.resolve\(|import\()|(?:import|export)\s+(?:[\s\S]*?from\s+)?)['"]([^'"]*)['"]\)?/g,N=/(?:(?:import\()|(?:import|export)\s+(?:[\s\S]*?from\s+)?)['"]([^'"]*)['"]\)?/g,z=/(?:(?:require\(|require\.resolve\()\s+)['"]([^'"]*)['"]\)/g,v=[".js",".jsx",".ts",".tsx",".cjs",".mjs",".mdx",".d.ts",".json"];var U=(t,s,l)=>{const n=[];for(const c of t){const{changed:o,text:a,changes:r}=R(c,s,l);o&&n.push({file:c,text:a,changes:r})}return n};function R(t,s,l){if(!$(t))throw new A(R.name,t);const n=O(t,"utf-8"),c=[],o=n.replace(M,(a,r,e)=>{const x=!t.endsWith(".ts")&&(r.includes("import")||r.includes("export")),h=C(e,t,s,l,x);if(!h.replacement)return a;const m=a.lastIndexOf(e);return c.push({original:p(h.original),modified:p(h.replacement)}),a.substring(0,m)+h.replacement+a.substring(m+e.length)});return{changed:n!==o,text:o,changes:c}}function C(t,s,l,{srcPath:n,outPath:c},o){const a=g(n,E(c,s)),r=y(a),e=y(s),x=t.startsWith("./")||t.startsWith("../"),h=l.filter(({prefix:i})=>t.startsWith(i)),u=(x?[g(r,t)]:h.flatMap(({prefix:i,aliasPaths:d})=>d.map(b=>g(b,t.replace(i,""))))).reduce((i,d)=>i||D(d),null);if(!u)return{file:s,original:t};const P=o?u.file:u.imported,f=(u.type==="file"?_(E(r,y(P)),F(P)):E(r,P)).replace(/^(?!\.+\/)/,i=>"./"+i).replace(/\.[^/.]*ts[^/.]*$/,i=>i.replace(/\.ts$/,".js").replace(/\.tsx$/,".jsx").replace(/\.mts$/,".mjs").replace(/\.cts$/,".cjs")),I=j(g(e,f))?f:f.replace(/\.jsx$/,".js");return{file:p(s),original:p(t),...t!==I&&{replacement:p(I)}}}function D(t){const s=t.replace(/\.[^/.]*js[^/.]*$/,e=>e.replace("js","ts")),l=t.replace(/\.[^/.]*(js|json)[^/.]*$/,""),n=v.map(e=>`${l}${e}`),o=[t,s,...n].find(e=>j(e));if(o)return{imported:t,file:o,type:"file"};const r=(X(t)?v.map(e=>`${t}/index${e}`):[]).find(e=>j(e));return r?{imported:t,file:r,type:"directory"}:null}function j(t){try{return T(t).isFile()}catch{return!1}}function X(t){try{return T(t).isDirectory()}catch{return!1}}export{z as COMMONJS_IMPORT_EXPORT_REGEX,N as ESM_IMPORT_EXPORT_REGEX,M as IMPORT_EXPORT_REGEX,C as aliasToRelativePath,U as default,R as replaceAliasPathsInFile};
